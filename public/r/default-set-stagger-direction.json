{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "default-set-stagger-direction",
  "type": "registry:lib",
  "title": "set stagger direction",
  "description": "Set stagger direction, Allow to animate the stagger direction, from start, middle, end with default style.",
  "files": [
    {
      "path": "__registry__/utils/set-stagger-direction/default/index.ts",
      "content": "export type StaggerDirection = 'start' | 'middle' | 'end';\n\nexport interface StaggerOptions {\n  direction?: StaggerDirection;\n  staggerValue?: number;\n  totalItems: number;\n  index: number;\n}\n\n/**\n * Calculates stagger delay based on the direction and pattern\n * @param options - Stagger configuration options\n * @returns number - The calculated stagger delay\n */\nexport function setStaggerDirection({\n  direction = 'start',\n  staggerValue = 0.02,\n  totalItems,\n  index,\n}: StaggerOptions): number {\n  switch (direction) {\n    case 'start':\n      // Linear progression from start\n      return index * staggerValue;\n\n    case 'middle':\n      // Stagger from the middle outward\n      const middleIndex = Math.floor(totalItems / 2);\n      return Math.abs(index - middleIndex) * staggerValue;\n\n    case 'end':\n      // Linear progression from end\n      return (totalItems - 1 - index) * staggerValue;\n\n    default:\n      return 0;\n  }\n}\n\n/**\n * Example usage:\n *\n * // Start stagger (default)\n * const startDelay = useStaggerDirection({\n *   totalItems: 10,\n *   index: 5\n * }); // Returns 0.1 (5 * 0.02)\n *\n * // Middle stagger\n * const middleDelay = useStaggerDirection({\n *   direction: 'middle',\n *   totalItems: 10,\n *   index: 5\n * }); // Returns delay based on distance from middle\n *\n * // End stagger\n * const endDelay = useStaggerDirection({\n *   direction: 'end',\n *   totalItems: 10,\n *   index: 5\n * }); // Returns 0.08 ((10-1-5) * 0.02)\n */\n",
      "type": "registry:lib",
      "target": "components/systaliko-ui/utils/set-stagger-direction.ts"
    }
  ]
}