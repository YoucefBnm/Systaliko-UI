{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shadcn-default-container-clipped",
  "type": "registry:block",
  "title": "Container Clipped",
  "description": "Clipped container with shadcn-default style.",
  "files": [
    {
      "path": "__registry__/containers/container-clipped/shadcn-default/index.tsx",
      "content": "'use client';\nimport { cn } from '@/lib/utils';\nimport * as React from 'react';\n\nexport const clipPathVariants = {\n  default: 'polygon(60% 0, 100% 40%, 100% 100%, 0 100%, 0 0)',\n  reversed: 'polygon(0 0, 100% 0, 100% 100%, 40% 100%, 0 60%)',\n} as const;\n\nexport const ContainerClipped = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={cn(\n        'flex relative h-full flex-col md:grid md:grid-cols-12 md:grid-rows-[10%_80%_10%]',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nContainerClipped.displayName = 'ContainerClipped';\n\nexport const ContainerClippedColLg = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={cn(\n        'md:col-span-9 md:row-span-3 md:col-start-1 md:row-start-1 relative',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nContainerClippedColLg.displayName = 'ContainerClippedColLg';\n\nexport const ContainerClippedColMd = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      className={cn(\n        'relative md:row-start-2 md:row-end-3 md:col-start-7 md:col-end-13',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nContainerClippedColMd.displayName = 'ContainerClippedColMd';\n\nexport const ContainerClippedBg = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    variant?: keyof typeof clipPathVariants;\n  }\n>(({ variant = 'default', className, style, ...props }, ref) => {\n  return (\n    <div\n      className={className}\n      ref={ref}\n      style={{\n        clipPath: clipPathVariants[variant],\n        ...style,\n      }}\n      {...props}\n    />\n  );\n});\nContainerClippedBg.displayName = 'ContainerClippedBg';\n",
      "type": "registry:block",
      "target": "components/systaliko-ui/containers/container-clipped.tsx"
    }
  ]
}