{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shadcn-default-text-stagger-inview",
  "type": "registry:ui",
  "title": "Text Stagger Inview",
  "description": "Splitted text animation with staggered reveal triggered by view, You can easily customize by controlling the animation property (transform, opacity, blur) and the stagger value, and the transition with shadcn-default style.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "__registry__/text/text-stagger-inview/shadcn-default/index.tsx",
      "content": "'use client';\n\nimport {\n  AnimationT,\n  useAnimationVariants,\n} from '@/components/systaliko-ui/utils/use-animation-variants';\nimport { HTMLMotionProps, motion } from 'motion/react';\nimport * as React from 'react';\ninterface WordProps extends React.HTMLAttributes<HTMLSpanElement> {\n  animation?: AnimationT;\n}\ninterface TextStaggerProps extends HTMLMotionProps<'span'> {\n  stagger?: number;\n  animation?: AnimationT;\n}\nconst TRANSITION_CONFIG = { duration: 0.3, ease: [0.25, 0.46, 0.45, 0.94] };\n\nexport function Word({ children, animation, ...props }: WordProps) {\n  const characters = String(children).split('');\n  const animationVariants = useAnimationVariants(animation);\n  return (\n    <span className=\"inline-block text-nowrap\" {...props}>\n      {characters.map((char, index) => (\n        <motion.span\n          className=\"inline-block\"\n          variants={animationVariants}\n          key={`${char}-${index}`}\n          transition={TRANSITION_CONFIG}\n        >\n          {char}\n        </motion.span>\n      ))}\n    </span>\n  );\n}\n\nexport function TextStaggerInview({\n  children,\n  transition,\n  className,\n  stagger = 0.02,\n  animation,\n  ...props\n}: TextStaggerProps) {\n  const words = String(children).split(' ');\n  return (\n    <motion.span\n      initial=\"hidden\"\n      whileInView={'visible'}\n      viewport={{ once: true }}\n      className={className}\n      transition={{ staggerChildren: stagger, ...transition }}\n      {...props}\n    >\n      {words.map((word, index) => (\n        <React.Fragment key={`${word}-${index}`}>\n          <Word animation={animation}>{word}</Word>\n          {index < words.length - 1 && ' '}\n        </React.Fragment>\n      ))}\n    </motion.span>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/systaliko-ui/text/text-stagger-inview.tsx"
    }
  ]
}