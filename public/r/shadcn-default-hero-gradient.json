{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shadcn-default-hero-gradient",
  "type": "registry:block",
  "title": "Hero Gradient",
  "description": "Hero with gradient background and text with shadcn-default style.",
  "files": [
    {
      "path": "__registry__/heros/hero-gradient/shadcn-default/index.tsx",
      "content": "'use client';\nimport { cn } from '@/lib/utils';\nimport { gradientStyle } from '@/components/systaliko-ui/backgrounds/background-gradient';\nimport { TextStaggerInview } from '@/components/systaliko-ui/text/text-stagger-inview';\nimport {\n  AnimationT,\n  useAnimationVariants,\n} from '@/components/systaliko-ui/utils/use-animation-variants';\nimport { motion, HTMLMotionProps } from 'motion/react';\nimport * as React from 'react';\n\nexport const GRADIENT_COLORS = {\n  blue: [\n    { color: 'rgb(180, 176, 254)', start: '0%' },\n    { color: 'rgb(54, 50, 133)', start: '22.92%' },\n    { color: 'rgb(17, 13, 91)', start: '42.71%' },\n    { color: 'rgb(5, 3, 39)', start: '88.54%' },\n  ],\n  black: [\n    { color: '#333333', start: '0%' },\n    { color: '#292929', start: '22.92%' },\n    { color: '#1F1F1F', start: '42.71%' },\n    { color: '#0A0A0A', start: '88.54%' },\n  ],\n  purple: [\n    { color: '#342456', start: '0%' },\n    { color: '#2B1E48', start: '22.92%' },\n    { color: '#22183A', start: '42.71%' },\n    { color: '#110C1D', start: '88.54%' },\n  ],\n  green: [\n    { color: '#116A67', start: '0%' },\n    { color: '#0E5856', start: '22.92%' },\n    { color: '#0B4745', start: '42.71%' },\n    { color: '#062726', start: '88.54%' },\n  ],\n  skyblue: [\n    { color: '#70D9FF', start: '0%' },\n    { color: '#5CD3FF', start: '22.92%' },\n    { color: '#47CEFF', start: '42.71%' },\n    { color: '#0096CC', start: '88.54%' },\n  ],\n  red: [\n    { color: '#931020', start: '0%' },\n    { color: '#810E1C', start: '22.92%' },\n    { color: '#6E0C18', start: '42.71%' },\n    { color: '#37060C', start: '88.54%' },\n  ],\n  orange: [\n    { color: '#B04007', start: '0%' },\n    { color: '#893206', start: '22.92%' },\n    { color: '#622304', start: '42.71%' },\n    { color: '#3B1502', start: '88.54%' },\n  ],\n};\nconst GRADIENT_SIZES = {\n  default: { width: '70%', height: '55%' },\n  sm: { width: '50%', height: '35%' },\n  lg: { width: '85%', height: '70%' },\n};\nconst GRADIENT_POSITIONS = {\n  top: { x: '50%', y: '-10%' },\n  center: { x: '50%', y: '50%' },\n  bottom: { x: '50%', y: '110%' },\n  left: { x: '-10%', y: '0%' },\n  right: { x: '110%', y: '0%' },\n};\n\nexport const HeroTextBadge = React.forwardRef<\n  HTMLDivElement,\n  HTMLMotionProps<'div'> & { animation?: AnimationT }\n>(({ animation, className, ...props }, ref) => {\n  const animationVariants = useAnimationVariants(animation);\n  return (\n    <motion.div\n      className={cn(\n        'text-sm flex justify-center items-center px-4 py-2 rounded',\n        className,\n      )}\n      variants={animationVariants}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nHeroTextBadge.displayName = 'HeroTextBadge';\n\nexport const HeroHeading = React.forwardRef<\n  HTMLDivElement,\n  HTMLMotionProps<'div'> & { animation?: AnimationT }\n>(({ children, animation, className, ...props }, ref) => {\n  const animationVariants = useAnimationVariants(animation);\n  return (\n    <TextStaggerInview\n      className={className}\n      as=\"h1\"\n      variants={animationVariants}\n      ref={ref}\n      {...props}\n    >\n      {children}\n    </TextStaggerInview>\n  );\n});\nHeroHeading.displayName = 'HeroHeading';\n\nexport const HeroDescription = React.forwardRef<\n  HTMLDivElement,\n  HTMLMotionProps<'p'> & { animation?: AnimationT }\n>(({ animation, className, ...props }, ref) => {\n  const animationVariants = useAnimationVariants(animation);\n  return (\n    <motion.p\n      className={className}\n      variants={animationVariants}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nHeroDescription.displayName = 'HeroDescription';\nexport const HeroGradientCta = React.forwardRef<\n  HTMLDivElement,\n  HTMLMotionProps<'div'> & { animation?: AnimationT }\n>(({ animation, className, ...props }, ref) => {\n  const variants = useAnimationVariants(animation);\n  return (\n    <motion.div\n      ref={ref}\n      className={cn('flex gap-4 items-center', className)}\n      variants={variants}\n      {...props}\n    />\n  );\n});\nHeroGradientCta.displayName = 'HeroGradientCta';\n\nexport const HeroGradientText = React.forwardRef<\n  HTMLDivElement,\n  HTMLMotionProps<'div'>\n>(({ className, transition, ...props }, ref) => {\n  return (\n    <motion.div\n      ref={ref}\n      className={className}\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ once: true }}\n      transition={{\n        duration: 0.3,\n        staggerChildren: 0.2,\n        delayChildren: 0.2,\n        ...transition,\n      }}\n      {...props}\n    />\n  );\n});\nHeroGradientText.displayName = 'HeroGradientText';\ninterface HeroGradientBgProps {\n  gradientColors?:\n    | { color: string; start: string }[]\n    | keyof typeof GRADIENT_COLORS;\n  gradientSize?: { width: string; height: string };\n  gradientPosition?: { x: string; y: string };\n}\nexport const HeroGradient = React.forwardRef<\n  HTMLDivElement,\n  React.HtmlHTMLAttributes<HTMLDivElement> & HeroGradientBgProps\n>(\n  (\n    {\n      gradientColors = GRADIENT_COLORS['blue'],\n      gradientSize = GRADIENT_SIZES['default'],\n      gradientPosition = GRADIENT_POSITIONS['center'],\n      className,\n      style,\n      ...props\n    },\n    ref,\n  ) => {\n    const { gradientBg } = gradientStyle({\n      gradientColors:\n        typeof gradientColors === 'string'\n          ? GRADIENT_COLORS[gradientColors as keyof typeof GRADIENT_COLORS]\n          : gradientColors,\n      gradientSize,\n      gradientPosition,\n    });\n\n    return (\n      <section\n        style={{ backgroundImage: gradientBg, ...style }}\n        className={cn('relative', className)}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nHeroGradient.displayName = 'HeroGradient';\n",
      "type": "registry:block",
      "target": "components/systaliko-ui/hero-gradient.tsx"
    }
  ]
}