{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shadcn-default-custom-cursor",
  "type": "registry:ui",
  "title": "Custom Cursor",
  "description": "Turn your cursor into any element your want, text, image, video, or a shape with shadcn-default style.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "https://systaliko-ui.vercel.app/r/use-follow-mouse"
  ],
  "files": [
    {
      "path": "__registry__/custom-cursor/shadcn-default/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants,\n  TargetAndTransition,\n} from 'motion/react';\n\nimport { cn } from '@/lib/utils';\nimport { useFollowMouse } from '@/components/systaliko-ui/utils/use-follow-mouse';\n\nconst springConfig = {\n  damping: 25,\n  stiffness: 250,\n  mass: 1,\n  restSpeed: 0.01,\n  restDelta: 0.01,\n  duration: 0.3,\n};\n\nconst customCursorVariants: Variants = {};\n\ntype CursorVariant = keyof typeof customCursorVariants;\n\nexport function useSetCursorVariant() {\n  const [cursorVariant, setCursorVariant] = React.useState<\n    CursorVariant | MotionStyle\n  >('default');\n  const [cursorChildren, setCursorChildren] = React.useState<React.ReactNode>(\n    <div className=\"rounded-full bg-black size-5\" />,\n  );\n\n  const handleCustomStyle = React.useCallback((style: MotionStyle) => {\n    setCursorVariant(style);\n  }, []);\n  const resetCursorChildren = () =>\n    setCursorChildren(<div className=\"rounded-full bg-black size-5\" />);\n\n  const resetStyle = () => setCursorVariant({});\n  return {\n    cursorVariant,\n    setCursorVariant,\n    cursorChildren,\n    setCursorChildren,\n    handleCustomStyle,\n    resetCursorChildren,\n    resetStyle,\n  };\n}\n\ninterface CustomCursorProps extends HTMLMotionProps<'div'> {\n  variant?: CursorVariant | MotionStyle;\n  cursorChildren?: React.ReactNode;\n}\n\nexport function CustomCursor({\n  variant = 'default',\n  cursorChildren = null,\n  className,\n  style,\n}: CustomCursorProps) {\n  const { cursorXSpring, cursroYSpring } = useFollowMouse(springConfig);\n\n  const animate = React.useMemo(() => {\n    if (typeof variant === 'string') {\n      return variant;\n    }\n    return variant as TargetAndTransition;\n  }, [variant]);\n\n  return (\n    <motion.div\n      className={cn(\n        'pointer-events-none absolute left-0 top-0 z-50 flex min-w-5 min-h-5 items-center justify-center text-center text-xs',\n        className,\n      )}\n      layout={'preserve-aspect'}\n      variants={customCursorVariants}\n      animate={animate}\n      style={{\n        y: cursroYSpring,\n        x: cursorXSpring,\n        ...style,\n      }}\n      exit={{ transition: { duration: 0.5 } }}\n    >\n      <AnimatePresence mode=\"sync\">\n        {cursorChildren && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0 }}\n            transition={{\n              type: 'spring',\n              stiffness: 400,\n              damping: 30,\n              mass: 0.8,\n              duration: 0.2,\n            }}\n            className=\"flex items-center justify-center\"\n          >\n            {cursorChildren}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/systaliko-ui/custom-cursor.tsx"
    }
  ]
}