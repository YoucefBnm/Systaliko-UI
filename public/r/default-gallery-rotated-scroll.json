{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "default-gallery-rotated-scroll",
  "type": "registry:block",
  "title": "Scroll Trigger Rotation Animation",
  "description": "Animated gallery images, with scroll triggered animations, rotates and translates on the Y axis on scroll with default style.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "https://systaliko-ui.vercel.app/r/use-smooth-scroll"
  ],
  "files": [
    {
      "path": "__registry__/containers/gallery-rotated-scroll/default/index.tsx",
      "content": "import { cn } from '@/lib/utils';\nimport { useSmoothScroll } from '@/components/systaliko-ui/utils/use-smooth-scroll';\nimport {\n  motion,\n  HTMLMotionProps,\n  MotionValue,\n  useScroll,\n  useTransform,\n  easeInOut,\n} from 'motion/react';\nimport * as React from 'react';\n\ninterface GalleryRotatedScrollContextValue {\n  scrollYProgress: MotionValue<number>;\n}\nconst GalleryRotatedScrollContext = React.createContext<\n  GalleryRotatedScrollContextValue | undefined\n>(undefined);\nexport function useGalleryRotatedScrollContext() {\n  const context = React.useContext(GalleryRotatedScrollContext);\n  if (!context) {\n    throw new Error(\n      'useGalleryRotatedScrollContext must be used within a GalleryRotatedScrollContextProvider',\n    );\n  }\n  return context;\n}\n\nexport const GalleryRotatedScroll = ({\n  spacerClass,\n  children,\n  className,\n  style,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & { spacerClass?: string }) => {\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: scrollRef,\n  });\n\n  useSmoothScroll();\n\n  return (\n    <GalleryRotatedScrollContext.Provider value={{ scrollYProgress }}>\n      <div\n        ref={scrollRef}\n        className={cn('relative overflow-hidden', className)}\n        style={{\n          perspective: '1000px',\n          perspectiveOrigin: 'center top',\n          transformStyle: 'preserve-3d',\n          transformOrigin: '50% 50%',\n          ...style,\n        }}\n        {...props}\n      >\n        {children}\n        <div className={cn('w-full h-96', spacerClass)} />\n      </div>\n    </GalleryRotatedScrollContext.Provider>\n  );\n};\n\nGalleryRotatedScroll.displayName = 'GalleryRotatedScroll';\n\ninterface GalleryContainerProps extends HTMLMotionProps<'div'> {\n  yRange?: [number, number];\n  rotateXRange?: [number, number];\n  scaleRange?: [number, number];\n}\n\nexport const GalleryContainer = React.forwardRef<\n  HTMLDivElement,\n  GalleryContainerProps\n>(\n  (\n    {\n      yRange = [0, 350],\n      rotateXRange = [80, 0],\n      scaleRange = [1.1, 1],\n      children,\n      className,\n      style,\n      ...props\n    },\n    ref,\n  ) => {\n    const { scrollYProgress } = useGalleryRotatedScrollContext();\n\n    const y = useTransform(scrollYProgress, [0, 1], yRange, {\n      ease: easeInOut,\n    });\n\n    const rotateX = useTransform(scrollYProgress, [0, 0.5], rotateXRange, {\n      ease: easeInOut,\n    });\n\n    const scale = useTransform(scrollYProgress, [0.5, 0.9], scaleRange, {\n      ease: easeInOut,\n    });\n\n    return (\n      <motion.div\n        ref={ref}\n        className={cn('flex relative', className)}\n        style={{\n          perspective: '1000px',\n          perspectiveOrigin: 'center top',\n          transformStyle: 'preserve-3d',\n          transformOrigin: '50% 50%',\n          willChange: 'transform',\n          backfaceVisibility: 'hidden',\n          top: 0,\n          y,\n          rotateX,\n          scale,\n          ...style,\n        }}\n        {...props}\n      >\n        {children}\n      </motion.div>\n    );\n  },\n);\nGalleryContainer.displayName = 'GalleryContainer';\n\nexport const GalleryCol = React.forwardRef<\n  HTMLDivElement,\n  HTMLMotionProps<'div'> & { yRange?: [string, string] }\n>(({ yRange = ['-5%', '1%'], className, style, ...props }, ref) => {\n  const { scrollYProgress } = useGalleryRotatedScrollContext();\n\n  const y = useTransform(scrollYProgress, [0.4, 0.8], yRange, {\n    ease: easeInOut,\n  });\n\n  return (\n    <motion.div\n      ref={ref}\n      className={cn('relative flex flex-col w-full', className)}\n      style={{\n        y,\n        backfaceVisibility: 'hidden',\n        ...style,\n      }}\n      {...props}\n    />\n  );\n});\nGalleryCol.displayName = 'GalleryCol';\n",
      "type": "registry:block",
      "target": "components/systaliko-ui/containers/gallery-rotated-scroll.tsx"
    }
  ]
}